#include "asim/provides/hasim_common.h"
#include "asim/provides/funcp_base_types.h"
#include "asim/provides/funcp_memory.h"

service FUNCP_MEMORY
{
    server hw (bsv, connection) <- sw (cpp, method)
    {
        method Invalidate(in MEM_INVAL_CACHELINE_INFO_RRR[96] info, out UINT32[32] ack);
        method InvalidateAll(in UINT32[32] req, out UINT32[32] ack);
    };

    server sw (cpp, method) <- hw (bsv, connection)
    {
        method Load (in MEM_ADDRESS_RRR[64] addr, out MEM_VALUE[FUNCP_ISA_INT_REG_SIZE] data);
        method LoadCacheLine (in MEM_ADDRESS_RRR[64] addr, out MEM_CACHELINE[FUNCP_CACHELINE_BITS] data);

        method Store(in MEM_STORE_INFO_RRR[MEMORY_STORE_INFO_SIZE] info);
        method StoreCacheLine(in MEM_STORE_CACHELINE_INFO_RRR[MEMORY_STORE_CACHELINE_INFO_SIZE] info);
        // Store cache line with ACK
        method StoreCacheLine_Sync(in MEM_STORE_CACHELINE_INFO_RRR[MEMORY_STORE_CACHELINE_INFO_SIZE] info, out UINT32[32] ack);

        method VtoP(in CONTEXT_ID_RRR[CONTEXT_ID_BITS_RRR] ctx_id, in MEM_VALUE[FUNCP_ISA_INT_REG_SIZE] va, out MEM_ADDRESS_RRR[64] pa);
    };
};
