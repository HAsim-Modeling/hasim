//
// INTEL CONFIDENTIAL
// Copyright (c) 2008 Intel Corp.  Recipient is granted a non-sublicensable 
// copyright license under Intel copyrights to copy and distribute this code 
// internally only. This code is provided "AS IS" with no support and with no 
// warranties of any kind, including warranties of MERCHANTABILITY,
// FITNESS FOR ANY PARTICULAR PURPOSE or INTELLECTUAL PROPERTY INFRINGEMENT. 
// By making any use of this code, Recipient agrees that no other licenses 
// to any Intel patents, trade secrets, copyrights or other intellectual 
// property rights are granted herein, and no other licenses shall arise by 
// estoppel, implication or by operation of law. Recipient accepts all risks 
// of use.
//
 
def ASSERTIONS.FUNCP_MEMSTATE_SBUFFER.BUSY_TOKEN            "FUNCP SBuffer: Token or token's alias already allocated!";
def ASSERTIONS.FUNCP_MEMSTATE_SBUFFER.BUSY_STORE_TOKEN      "FUNCP SBuffer: Old store token state still dirty!"; 
def ASSERTIONS.FUNCP_MEMSTATE_SBUFFER.TOO_MANY_TOKEN_STORES "FUNCP SBuffer: Too many stores for token!";
def ASSERTIONS.FUNCP_MEMSTATE_SBUFFER.FREELIST_EMPTY        "FUNCP SBuffer: Free list empty!";
def ASSERTIONS.FUNCP_MEMSTATE_SBUFFER.NO_STORES             "FUNCP SBuffer: Token has no stores to commit!";
