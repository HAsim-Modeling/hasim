#!/usr/bin/make --no-keep-going -f 

include @DOTS_TO_MAKEFILE_INCL@/Makefile.include

DIR = @DIR@
FULL_DIR = @FULL_DIR@
SUBDIRS = @SUBDIRS@
SUBDIR_WRAPPER_BIS = @SUBDIR_WRAPPER_BIS@
BSVS = @BSVS@
GEN_BSVS = @GEN_BSVS@
SRCS = $(BSVS) $(GEN_BSVS) @SRCS@
CSRCS = @CSRCS@
BDPI_BAS = @BDPI_BAS@

WRAPPER = $(DIR)_Wrapper
WRAPPER_SYNTH_ID = mk_$(WRAPPER)
LOGFILE = $(WRAPPER_SYNTH_ID).log

##
## Include build directories from subdirectories in the library path.  Derive
## the build directories from ALL_DIRS.  Build directories are relative to
## each directory.
##
ALL_BUILD_DIRS := $(subst :,/$(TMP_BSC_DIR):,$(ALL_DIRS))/$(TMP_BSC_DIR)
ALL_LIB_DIRS = $(ALL_DIRS):$(ALL_BUILD_DIRS)

SURROGATE_BIS=$(SUBDIRS:%=./$(TMP_BSC_DIR)/%.bi)

################################################################
## 

.PHONY: all
all: $(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).ba

################################################################
## 

$(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).o: $(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).ba
	@ \
	 bsv=`basename $@` ; \
	 bsv=$${bsv/%.o/.bsv} ; \
	 top=$${bsv/%.bsv/} ; \
	 full_bsv=`grep "^#PATH_BSV: .*$$bsv$$" .depends-bsv` ; \
	 full_bsv=$${full_bsv/##PATH_BSV: /} ; \
	 bdir=$${full_bsv/$$bsv/} ; \
	 bdir=$${bdir}.bsc ; \
	 echo "Generating and Linking C for $$top" ; \
	 $(BSC) $(BSC_FLAGS) -sim -p +:$(ALL_LIB_DIRS):$(TMP_BSC_DIR) -bdir $$bdir -vdir $$bdir -simdir $$bdir -o $$bdir/$$top -e $$top $<


## .ba file is built as a side-effect of building the .v file.
$(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).ba: $(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).v

$(TMP_BSC_DIR)/$(WRAPPER_SYNTH_ID).v: $(SURROGATE_BIS) $(TMP_BSC_DIR)/$(WRAPPER).bi

$(SURROGATE_BIS): .surrogates

.surrogates: $(SUBDIR_WRAPPER_BIS) 
	@$(CONNECTION_SCRIPT) $(APM_FILE) $(DIR)
        @touch $@

##
## This rule for building a module with Bluespec is complicated only because
## the .bsv file may not be in the local directory.  hasim-bsc-mkdepend leaves
## hints for finding source files in the .depends-bsv file.
##
%.bi:
	@$(TRAP_ERRORS)
	@ \
	 log=$@ ; \
	 log=$${log/%.bi/.log} ; \
	 bsv=`basename $@` ; \
	 bsv=$${bsv/%.bi/.bsv} ; \
	 full_bsv=`grep "^#PATH_BSV: .*$$bsv$$" .depends-bsv` ; \
	 full_bsv=$${full_bsv/##PATH_BSV: /} ; \
	 bdir=$${full_bsv/$$bsv/} ; \
         bdir=$${bdir}.bsc ; \
	 echo "Compiling $$full_bsv" ; \
	 $(BSC) $(BSC_FLAGS) -elab -verilog -p +:$(ALL_LIB_DIRS):$(TMP_BSC_DIR) -bdir $$bdir $$full_bsv 2>&1 | tee $$log ; test $${PIPESTATUS[0]} -eq 0


##
##
## ***** BE CAREFUL ***** hasim-bsc-mkdepend generates dependence for .depends.
##    If you change the name here you must also change it in the script.
##

Makefile:: .depends-bsv

.depends-bsv: $(GEN_BSVS)
	@hasim-bsc-mkdepend -bdir $(TMP_BSC_DIR) -p +:$(ALL_LIB_DIRS) ./$(WRAPPER).bsv > .depends-bsv


-include .depends-bsv


################################################################
## Misc.

.PHONY: help
help:
	@echo "  [all] (default) generate ba and verilog for design"
	@echo "  [help] display this message"
	@echo "  [clean] remove intermediate files"

.PHONY: clean
clean: clean_subdirs
	@rm -rf $(TMP_BSC_DIR)/*.*
	@rm -f $(WRAPPER_SYNTH_ID).ba $(WRAPPER_SYNTH_ID).v $(LOGFILE)
	@rm -f .depends-bsv .depends .all_intermediate
	@rm -f *~	

.PHONY: clean_subdirs
clean_subdirs:
	@for dir in $(SUBDIRS); do \
		$(MAKE) -C $$dir clean; \
	done
