#!/usr/bin/perl -w
(our $usageMsg = <<'ENDMSG') =~ s/^\#//gm;
#
# This script reads in a HASim model configuration (.hmc) file and creates
# a build directory, including appropiate sym links and Makefile.
#
ENDMSG

use strict "vars";
use warnings;
no  warnings("once");
use Getopt::Long;

#--------------------------------------------------------------------------
# Command line processing
#--------------------------------------------------------------------------

our %opts;

sub ERROR
{
  my ( $msg ) = @_;
  print "\n ERROR: $msg \n\n";
  exit;
}

sub usage()
{

  print "\n";
  print " Usage: configure-models [options] filename.hmc\n";
  print "\n";
  print " Options:\n";
  print "  --help  print this message\n";
  print "$usageMsg";

  exit();
}

sub processCommandLine()
{

  $opts{"help"} = 0;
  $opts{"prefix"} = "";
  Getopt::Long::GetOptions( \%opts, 'help|?', 'prefix:s') or usage();
  ($opts{"filename"}     = shift(@ARGV)) or usage();
  
  $opts{"help"} and usage();

}

sub readConfigFile
{
  my $fname = $_[0];

  my @mods;
  open( TEST_DATA, "<$fname" ) or ERROR( "Could not open $fname!" );
  while ( my $line = <TEST_DATA> ) {

    chomp($line);
    push(@mods, $line);

  }
  close( TEST_DATA );

  return @mods;
}

sub makeMakefile
{
  my $mods = $_[0];
  return "XXX Write this";
}

sub main()
{
  processCommandLine();
  
  # Open module file
  
  my @modules = readConfigFile($opts{"filename"});
  
  # Create simlinks
  
  
  foreach my $mod (@modules) 
  {
    my $modloc = $opts{"prefix"} . $mod;
  
    `ln -s $mod $modloc`;
    if ($? != 0)
    {
      ERROR("Error creating symlink from $mod to $modloc");
    }
  }
  # Create Makefile
  
  my $makefile = makeMakefile(@modules);
  
  open(MFILE, ">Makefile") or ERROR("Could not create Makefile");
  print MFILE $makefile;
  close(MFILE);
  
}

main();
